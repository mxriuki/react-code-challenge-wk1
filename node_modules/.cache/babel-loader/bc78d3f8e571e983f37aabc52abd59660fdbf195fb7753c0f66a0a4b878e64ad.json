{"ast":null,"code":"var _jsxFileName = \"/home/victor/moringaassignments2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bankAPI = 'http://localhost:8001/transactions';\nfunction AccountContainer() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => fetch(bankAPI).then(res => res.json()).then(setTransactions), []);\n  function addNewTransaction(newTrans) {\n    newTrans.amount = parseFloat(newTrans.amount);\n    fetch(bankAPI, {\n      method: 'POST',\n      headers: {\n        Accepts: 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(newTrans)\n    }).then(res => res.json()).then(json => setTransactions([...transactions, json]));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleChange: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      handleSubmit: addNewTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions.filter(t => t)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"TJdUscyMgtOJRF9rZmcbRXPgMXs=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","bankAPI","AccountContainer","_s","transactions","setTransactions","searchTerm","setSearchTerm","fetch","then","res","json","addNewTransaction","newTrans","amount","parseFloat","method","headers","Accepts","body","JSON","stringify","children","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","filter","t","_c","$RefreshReg$"],"sources":["/home/victor/moringaassignments2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AccountContainer.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nconst bankAPI = 'http://localhost:8001/transactions'\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => fetch(bankAPI)\n  .then(res => res.json())\n  .then(setTransactions), [])\n\n  function addNewTransaction(newTrans){\n    newTrans.amount = parseFloat(newTrans.amount);\n fetch(bankAPI, {\n  method: 'POST',\n  headers: {\n    Accepts: 'application/json',\n    'Content-type': 'application/json'\n  },\n  body: JSON.stringify(newTrans)\n })\n.then(res => res.json())\n.then(json => setTransactions([...transactions, json]))\n  }\n  return (\n    <div>\n      <Search handleChange={setSearchTerm}/>\n      <AddTransactionForm handleSubmit={addNewTransaction} />\n      <TransactionsList transactions={transactions.filter(t => t)}/>\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAMc,KAAK,CAACP,OAAO,CAAC,CAC7BQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACJ,eAAe,CAAC,EAAE,EAAE,CAAC;EAE3B,SAASO,iBAAiBA,CAACC,QAAQ,EAAC;IAClCA,QAAQ,CAACC,MAAM,GAAGC,UAAU,CAACF,QAAQ,CAACC,MAAM,CAAC;IAChDN,KAAK,CAACP,OAAO,EAAE;MACde,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,OAAO,EAAE,kBAAkB;QAC3B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;IAC9B,CAAC,CAAC,CACFJ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACE,IAAI,IAAIN,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEO,IAAI,CAAC,CAAC,CAAC;EACrD;EACA,oBACEX,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACH,MAAM;MAAC0B,YAAY,EAAEhB;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtC3B,OAAA,CAACF,kBAAkB;MAAC8B,YAAY,EAAEhB;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvD3B,OAAA,CAACJ,gBAAgB;MAACQ,YAAY,EAAEA,YAAY,CAACyB,MAAM,CAACC,CAAC,IAAIA,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACxB,EAAA,CA5BQD,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AA8BzB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}